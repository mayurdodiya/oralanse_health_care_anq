const dbConfig = require("../config/db.config");
const Sequelize = require("sequelize");

const sequelize = new Sequelize(dbConfig.DB, dbConfig.USER, dbConfig.PASSWORD, {
  host: dbConfig.HOST,
  dialect: dbConfig.dialect,
  operatorsAliases: 0,
  pool: {
    max: dbConfig.pool.max,
    min: dbConfig.pool.min,
    acquire: dbConfig.pool.acquire,
    idle: dbConfig.pool.idle,
  }
});


const db = {};
db.ambulance_requests = require("./ambulance_requests.model")(sequelize, Sequelize);
db.ambulances = require("./ambulances.model")(sequelize, Sequelize);
db.appointment_requests = require("./appointment_requests.model")(sequelize, Sequelize);
db.appointments = require("./appointments.model")(sequelize, Sequelize);
db.areas = require("./areas.model")(sequelize, Sequelize);
db.blogs = require("./blogs.model")(sequelize, Sequelize);
db.challenge_answers = require("./challenge_answers.model")(sequelize, Sequelize);
db.challenge_quizzes = require("./challenge_quizzes.model")(sequelize, Sequelize);
db.challenges = require("./challenges.model")(sequelize, Sequelize);
db.cities = require("./cities.model")(sequelize, Sequelize);
db.clinic_doctor_relations = require("./clinic_doctor_relations.model")(sequelize, Sequelize);
db.clinic_facilities = require("./clinic_facilities.model")(sequelize, Sequelize);
db.clinic_specialities = require("./clinic_specialities.model")(sequelize, Sequelize);
db.clinic_staff_attendances = require("./clinic_staff_attendances.model")(sequelize, Sequelize);
db.clinic_staff_payouts = require("./clinic_staff_payouts.model")(sequelize, Sequelize);
db.clinic_staffs = require("./clinic_staffs.model")(sequelize, Sequelize);
db.clinic_stores = require("./clinic_stores.model")(sequelize, Sequelize);
db.clinic_timings = require("./clinic_timings.model")(sequelize, Sequelize);
db.clinic_treatments = require("./clinic_treatments.model")(sequelize, Sequelize);
db.clinics = require("./clinics.model")(sequelize, Sequelize);
db.co_working_space_medias = require("./co_working_space_medias.model")(sequelize, Sequelize);
db.co_working_space_requests = require("./co_working_space_requests.model")(sequelize, Sequelize);
db.co_working_spaces = require("./co_working_spaces.model")(sequelize, Sequelize);
db.colleges = require("./colleges.model")(sequelize, Sequelize);
db.degrees = require("./degrees.model")(sequelize, Sequelize);
db.doctor_achievements = require("./doctor_achievements.model")(sequelize, Sequelize);
db.doctor_educations = require("./doctor_educations.model")(sequelize, Sequelize);
db.doctor_registration_details = require("./doctor_registration_details.model.js")(sequelize, Sequelize);
db.doctor_specialities = require("./doctor_specialities.model")(sequelize, Sequelize);
db.doctor_timings = require("./doctor_timings.model")(sequelize, Sequelize);
db.doctors = require("./doctors.model")(sequelize, Sequelize);
db.device_tokens = require("./device_tokens.model")(sequelize, Sequelize);
db.enduser_assign_roles = require("./enduser_assign_roles.model")(sequelize, Sequelize);
db.enduser_referral_requests = require("./enduser_referral_requests.model")(sequelize, Sequelize);
db.facilities = require("./facilities.model")(sequelize, Sequelize);
db.health_assessment_quizzes = require("./health_assessment_quizzes.model")(sequelize, Sequelize);
db.health_assessment_reports = require("./health_assessment_reports.model")(sequelize, Sequelize);
db.health_assessments = require("./health_assessments.model")(sequelize, Sequelize);
db.health_assessment_answers = require("./health_assessment_answers.model")(sequelize, Sequelize);
db.hospital_admins = require("./hospital_admins.model")(sequelize, Sequelize);
db.tickets = require("./tickets.model")(sequelize, Sequelize);
db.job_applicants = require("./job_applicants.model")(sequelize, Sequelize);
db.jobs = require("./jobs.model")(sequelize, Sequelize);
db.languages = require("./languages.model")(sequelize, Sequelize);
db.machines = require("./machines.model")(sequelize, Sequelize);
db.notifications = require("./notifications.model")(sequelize, Sequelize);
db.oral_screening_quiz = require("./oral_screening_quiz.model")(sequelize, Sequelize);
db.order_details = require("./order_details.model")(sequelize, Sequelize);
db.orders = require("./orders.model")(sequelize, Sequelize);
db.otps = require("./otps.model")(sequelize, Sequelize);
db.patient_assign_nurses = require("./patient_assign_nurses.model")(sequelize, Sequelize);
db.patient_billings = require("./patient_billings.model")(sequelize, Sequelize);
db.patient_blood_pressures = require("./patient_blood_pressures.model")(sequelize, Sequelize);
db.user_challenges = require("./user_challenges.model")(sequelize, Sequelize);
db.patient_heart_rates = require("./patient_heart_rates.model")(sequelize, Sequelize);
db.patient_height_weights = require("./patient_height_weights.model")(sequelize, Sequelize);
db.patient_insurances = require("./patient_insurances.model")(sequelize, Sequelize);
db.patient_medicines = require("./patient_medicines.model")(sequelize, Sequelize);
db.patient_sugars = require("./patient_sugars.model")(sequelize, Sequelize);
db.patient_transactions = require("./patient_transactions.model")(sequelize, Sequelize);
db.patient_treatments = require("./patient_treatments.model")(sequelize, Sequelize);
db.patient_urine_outputs = require("./patient_urine_outputs.model")(sequelize, Sequelize);
db.patients = require("./patients.model")(sequelize, Sequelize);
db.pharmacies = require("./pharmacies.model")(sequelize, Sequelize);
db.post_subscribers = require("./post_subscribers.model")(sequelize, Sequelize);
db.prescription_documents = require("./prescription_documents.model")(sequelize, Sequelize);
db.ecom_product_categories = require("./ecom_product_categories.model")(sequelize, Sequelize);
db.ecom_products = require("./ecom_products.model")(sequelize, Sequelize);
db.promocods = require("./promocods.model")(sequelize, Sequelize);
db.research_posts = require("./research_posts.model")(sequelize, Sequelize);
db.roles = require("./roles.model")(sequelize, Sequelize);
db.specialities = require("./specialities.model")(sequelize, Sequelize);
db.symptoms = require("./symptoms.model")(sequelize, Sequelize);
db.treatments = require("./treatments.model")(sequelize, Sequelize);
db.user_details = require("./user_details.model")(sequelize, Sequelize);
db.user_subroles = require("./user_subroles.model")(sequelize, Sequelize);
db.users = require("./users.model")(sequelize, Sequelize);
db.topics = require("./topics.model")(sequelize, Sequelize);
db.appointment_documents = require("./appointment_documents.model")(sequelize, Sequelize);
db.user_reviews = require("./user_reviews.model")(sequelize, Sequelize);
db.diseases = require("./diseases.model")(sequelize, Sequelize);
db.static_pages = require("./static_pages.model")(sequelize, Sequelize);
db.transactions = require("./transactions.model")(sequelize, Sequelize);
db.patient_symptoms = require("./patient_symptoms.model")(sequelize, Sequelize);
db.patient_diseases = require("./patient_diseases.model")(sequelize, Sequelize);
db.ecom_addresses = require("./ecom_addresses.model")(sequelize, Sequelize);
db.medias = require("./medias.model")(sequelize, Sequelize);
db.cancer_assistances = require("./cancer_assistances.model")(sequelize, Sequelize);
db.user_bank_details = require("./user_bank_details.model")(sequelize, Sequelize);
db.beds = require("./beds.model")(sequelize, Sequelize);
db.assign_beds = require("./assign_beds.model")(sequelize, Sequelize);
db.settings = require("./settings.model")(sequelize, Sequelize);
db.smoking_challenges = require("./smoking_challenges.model")(sequelize, Sequelize);
db.track_blood_sugars = require("./track_blood_sugars.model")(sequelize, Sequelize);
db.track_blood_pressures = require("./track_blood_pressures.model")(sequelize, Sequelize);
db.notification_settings = require("./notification_settings.model")(sequelize, Sequelize);
db.blood_types = require("./blood_types.model")(sequelize, Sequelize);
db.blood_banks = require("./blood_banks.model")(sequelize, Sequelize);
db.blood_participants = require("./blood_participants.model")(sequelize, Sequelize);
db.machine_logs = require("./machine_logs.model")(sequelize, Sequelize);
db.vendors = require("./vendors.model.js")(sequelize, Sequelize);
db.contact_us = require("./contact_us.model.js")(sequelize, Sequelize);
db.push_notifications = require("./push_notifications.model.js")(sequelize, Sequelize);
db.ticket_histories = require("./ticket_histories.model.js")(sequelize, Sequelize);
db.health_camps = require("./health_camps.model.js")(sequelize, Sequelize);
db.camp_patients = require("./camp_patients.model.js")(sequelize, Sequelize);
db.banners = require("./banners.model.js")(sequelize, Sequelize);
db.clinic_banners = require("./clinic_banners.model.js")(sequelize, Sequelize);
db.sos = require("./sos.model.js")(sequelize, Sequelize);
db.notice_boards = require("./notice_boards.model.js")(sequelize, Sequelize);
db.oral_doctors = require("./oral_doctors.model.js")(sequelize, Sequelize);
db.oral_screening_answers = require("./oral_screening_answers.model.js")(sequelize, Sequelize);
db.oral_screening_reports = require("./oral_screening_reports.model.js")(sequelize, Sequelize);
db.oral_screening_requests = require("./oral_screening_requests.model.js")(sequelize, Sequelize);
db.oral_dental_charts = require("./oral_dental_charts.model.js")(sequelize, Sequelize);
db.medicines = require("./medicines.model.js")(sequelize, Sequelize);
db.insurance_companies = require("./insurance_companies.model.js")(sequelize, Sequelize);
db.oral_screening_medias = require("./oral_screening_medias.model.js")(sequelize, Sequelize);
db.registration_councils = require("./registration_councils.model.js")(sequelize, Sequelize);
db.lab_tests = require("./lab_tests.model.js")(sequelize, Sequelize);
db.lab_test_patients = require("./lab_test_patients.model.js")(sequelize, Sequelize);
db.lab_test_clinics = require("./lab_test_clinics.model.js")(sequelize, Sequelize);
db.lab_test_values = require("./lab_test_values.model.js")(sequelize, Sequelize);
db.appointment_orders = require("./appointment_orders.model.js")(sequelize, Sequelize);
db.jitsi_rooms = require("./jitsi_rooms.model.js")(sequelize, Sequelize);
db.subscription_plans = require("./subscription_plans.model.js")(sequelize, Sequelize);
db.user_subscriptions = require("./user_subscriptions.model.js")(sequelize, Sequelize);
db.patient_suggested_labtest = require("./patient_suggested_labtest.model.js")(sequelize, Sequelize);
db.pharmacy_orders = require("./pharmacy_orders.model.js")(sequelize, Sequelize);
db.pharmacy_order_details = require("./pharmacy_order_details.model.js")(sequelize, Sequelize);
db.appointment_summaries = require("./appointment_summaries.model.js")(sequelize, Sequelize);
db.order_logs = require("./order_logs.model.js")(sequelize, Sequelize);
db.clinic_staff_timings = require("./clinic_staff_timings.model.js")(sequelize, Sequelize);
db.user_reward_histories = require("./user_reward_histories.model.js")(sequelize, Sequelize);
db.carts = require("./carts.model.js")(sequelize, Sequelize);
db.faqs = require("./faqs.model.js")(sequelize, Sequelize);





// join query relation
db.users.hasOne(db.user_details, { foreignKey: "user_id", as: "user_details" });
db.users.hasOne(db.patients, { foreignKey: "user_id", as: "patients" });
db.users.hasOne(db.doctors, { foreignKey: "user_id", as: "doctors" });
db.users.hasOne(db.clinics, { foreignKey: "user_id", as: "clinics" });
db.users.hasOne(db.appointment_requests, { foreignKey: "patient_id", as: "appointment_requests" });
db.users.hasOne(db.hospital_admins, { foreignKey: "user_id", as: "hospital_admins" });
db.users.hasOne(db.enduser_assign_roles, { foreignKey: "user_id", as: "enduser_assign_roles" });
db.users.hasOne(db.clinic_staffs, { foreignKey: "user_id", as: "clinic_staffs" });
db.user_details.hasOne(db.areas, { foreignKey: "pincode", sourceKey: "pincode", as: "areas" });
db.user_details.belongsTo(db.languages, { foreignKey: "language_id", as: "userLanguage" });
db.patients.hasMany(db.appointments, { foreignKey: "patient_id", as: "appointments" });
db.patients.hasMany(db.appointment_requests, { foreignKey: "patient_id", as: "appointment_requests" });
db.patients.hasMany(db.patient_treatments, { foreignKey: "patient_id", as: "patient_treatments" });
db.patients.hasMany(db.prescription_documents, { foreignKey: "patient_id", as: "prescription_documents" });
db.doctors.hasOne(db.doctor_registration_details, { foreignKey: "doctor_id", as: "doctor_registration_details" });
db.doctors.hasMany(db.doctor_educations, { foreignKey: "doctor_id", as: "doctor_educations" });
db.doctors.hasMany(db.doctor_specialities, { foreignKey: "doctor_id", as: "doctor_specialities" });
db.doctors.hasMany(db.clinic_doctor_relations, { foreignKey: "doctor_id", as: "clinic_doctor_relations" });
db.clinics.hasMany(db.clinic_timings, { foreignKey: "clinic_id", as: "clinic_timings" });
db.clinics.hasOne(db.areas, { foreignKey: "pincode", sourceKey: "pincode", as: "areas" });
db.clinics.hasMany(db.clinic_treatments, { foreignKey: "clinic_id", as: "clinic_treatments" });
db.clinic_treatments.hasMany(db.clinic_treatments, { foreignKey: "parent_treatment_id", as: "SubTreatments" });
db.clinics.hasMany(db.clinic_specialities, { foreignKey: "clinic_id", as: "clinic_specialities" });
db.clinics.hasMany(db.clinic_facilities, { foreignKey: "clinic_id", as: "clinic_facilities" });
db.cities.hasMany(db.areas, { foreignKey: "city_id", as: "areas" });
db.specialities.hasMany(db.specialities, { foreignKey: "parent_specialist_id", as: "specialitiesData" });
db.areas.belongsTo(db.cities, { foreignKey: "city_id", as: "cities" });
db.doctors.belongsTo(db.users, { foreignKey: "user_id", as: "users" });
db.oral_doctors.belongsTo(db.users, { foreignKey: "user_id", as: "users_oral_doctor" });
db.users.hasOne(db.oral_doctors, { foreignKey: "user_id", as: "oral_doctors" });
db.doctor_educations.belongsTo(db.degrees, { foreignKey: "degree_id", as: "degrees" });
db.clinic_staffs.hasMany(db.clinic_staff_attendances, { foreignKey: "clinic_staff_id", as: "clinic_staff_attendances" });
// db.clinic_staffs.hasMany(db.clinic_staff_attendances, { foreignKey: "date", as: "clinic_staff_attendances" });
db.clinic_staff_attendances.belongsTo(db.clinic_staffs, { foreignKey: "clinic_staff_id", as: "clinic_staff" });
db.clinic_staffs.belongsTo(db.clinics, { foreignKey: "clinic_id", as: "clinics" });
db.clinic_staffs.belongsTo(db.users, { foreignKey: "user_id", as: "clinicStaffUser" });
db.doctor_educations.belongsTo(db.colleges, { foreignKey: "college_id", as: "colleges" });
db.doctor_specialities.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "specialities" });
db.appointment_requests.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "doctors" });
db.appointment_requests.belongsTo(db.appointments, { foreignKey: "appointment_id", as: "appointments" });
db.appointment_requests.belongsTo(db.patients, { foreignKey: "patient_id", as: "patients" });
db.appointment_requests.belongsTo(db.treatments, { foreignKey: "treatment_id", as: "treatments" });
db.appointment_requests.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "specialities" });
db.patients.belongsTo(db.users, { foreignKey: "user_id", as: "usersData" });
db.clinics.belongsTo(db.users, { foreignKey: "user_id", as: "users" });
db.clinic_specialities.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "specialities" });
db.clinic_facilities.belongsTo(db.facilities, { foreignKey: "facility_id", as: "facilities" });
db.clinic_treatments.belongsTo(db.treatments, { foreignKey: "treatment_id", as: "treatments" });
db.clinic_doctor_relations.belongsTo(db.clinics, { foreignKey: "clinic_id", as: "clinics" });
db.clinic_doctor_relations.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "doctors" });
db.patient_treatments.belongsTo(db.treatments, { foreignKey: "treatment_id", as: "treatments" });
db.ecom_products.belongsTo(db.ecom_product_categories, { foreignKey: "category_id", as: "product_categories" });
db.orders.belongsTo(db.ecom_addresses, { foreignKey: "ecom_address_id", as: "order_addresses" });
db.orders.belongsTo(db.users, { foreignKey: "user_id", as: "ecomUser" });
db.order_details.belongsTo(db.ecom_products, { foreignKey: "product_id", as: "ecom_products" });
db.ecom_products.hasMany(db.medias, { foreignKey: "ecom_product_id", as: "medias" });
db.job_applicants.belongsTo(db.users, { foreignKey: "user_id", as: "userData" });
db.job_applicants.belongsTo(db.jobs, { foreignKey: "job_id", as: "jobs" });
db.jobs.belongsTo(db.degrees, { foreignKey: "degree_id", as: "degrees" });
db.jobs.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "jobsSpecialities" });
db.oral_doctors.belongsTo(db.degrees, { foreignKey: "degree_id", as: "oral_doctor_degree" });
db.research_posts.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "doctors" });
db.co_working_spaces.hasMany(db.co_working_space_medias, { foreignKey: "co_working_space_id", as: "co_working_space_medias" });
db.transactions.hasOne(db.user_bank_details, { foreignKey: "transaction_id", as: "user_bank_details" });
db.ambulance_requests.belongsTo(db.ambulances, { foreignKey: "ambulance_id", as: "ambulances" });
db.ambulance_requests.belongsTo(db.users, { foreignKey: "user_id", as: "users" });
db.blood_banks.belongsTo(db.blood_types, { foreignKey: "blood_type_id", as: "blood_types" });
db.blood_banks.hasMany(db.blood_participants, { foreignKey: "blood_bank_id", as: "blood_participants" });
db.blood_participants.belongsTo(db.blood_banks, { foreignKey: "blood_bank_id", as: "blood_banks" });
db.transactions.belongsTo(db.users, { foreignKey: "user_id", as: "usersTransaction" });
db.transactions.belongsTo(db.patients, { foreignKey: "user_id", sourceKey: "user_id", as: "transactionPatients" });
db.user_reward_histories.belongsTo(db.patients, { foreignKey: "user_id", sourceKey: "user_id", as: "userRewardPatients" });
db.clinic_staff_payouts.belongsTo(db.clinic_staffs, { foreignKey: "clinic_staff_id", as: "clinic_staff_data" });
db.oral_screening_reports.belongsTo(db.users, { foreignKey: "user_id", as: "users_screening" });
db.oral_screening_reports.belongsTo(db.oral_doctors, { foreignKey: "oral_doctor_id", as: "oral_screening_doctors" });
db.co_working_space_requests.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "doctors_request" });
db.clinic_banners.belongsTo(db.banners, { foreignKey: "banner_id", as: "banners" });
db.clinic_staffs.belongsTo(db.beds, { foreignKey: "bed_id", as: "beds" });
db.oral_screening_reports.hasMany(db.oral_screening_answers, { foreignKey: "oral_screening_report_id", as: "oral_screening_answers" });
db.oral_screening_answers.belongsTo(db.oral_screening_quiz, { foreignKey: "question_id", as: "oral_screening_quiz" });
db.oral_screening_reports.hasMany(db.oral_screening_medias, { foreignKey: "oral_screening_report_id", as: "oral_screening_medias" });
db.oral_screening_reports.hasMany(db.oral_dental_charts, { foreignKey: "oral_screening_report_id", as: "oral_dental_chart" });
db.oral_screening_reports.hasMany(db.oral_screening_requests, { foreignKey: "oral_screening_report_id", as: "oral_screening_requests" });
db.oral_screening_requests.belongsTo(db.patients, { foreignKey: "patient_id", as: "oral_screening_patients" });
db.doctor_registration_details.belongsTo(db.registration_councils, { foreignKey: "registration_council_id", as: "registration_councils" });
db.lab_test_clinics.belongsTo(db.lab_tests, { foreignKey: "lab_test_id", as: "lab_tests" });
db.diseases.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "diseases_specialities" });
db.pharmacies.belongsTo(db.medicines, { foreignKey: "medicine_id", as: "pharmacy_medicines" });
db.appointments.hasMany(db.lab_test_patients, { foreignKey: "patient_id", sourceKey: "patient_id", as: "labtestPatients" });
db.lab_test_patients.belongsTo(db.lab_test_clinics, { foreignKey: "lab_test_clinic_id", as: "labtestClinics" });
db.lab_test_patients.belongsTo(db.lab_tests, { foreignKey: "lab_test_id", as: "patientLabtest" });
db.lab_test_patients.belongsTo(db.patients, { foreignKey: "patient_id", as: "labtestPatientData" });
db.lab_test_patients.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "labtestDoctorData" });
db.lab_test_clinics.belongsTo(db.clinics, { foreignKey: "clinic_id", as: "clinicsLab" });
db.machines.belongsTo(db.vendors, { foreignKey: "vendor_id", as: "machineVendor" });
db.lab_tests.hasMany(db.lab_test_values, { foreignKey: "lab_test_id", as: "lab_test_values" });
db.appointments.hasMany(db.patient_suggested_labtest, { foreignKey: "appointment_id", as: "patient_suggested_labtest" });
db.patient_suggested_labtest.belongsTo(db.lab_tests, { foreignKey: "lab_test_id", as: "labtestData" });
db.pharmacy_orders.hasOne(db.pharmacy_order_details, { foreignKey: "pharmacy_order_id", as: "pharmacy_order_details" });
db.pharmacy_order_details.belongsTo(db.pharmacies, { foreignKey: "pharmacy_id", as: "pharmacyData" });
db.pharmacy_orders.belongsTo(db.beds, { foreignKey: "bed_id", as: "bedData" });
db.pharmacy_orders.belongsTo(db.users, { foreignKey: "user_id", as: "pharmacyPatient" });
db.pharmacy_orders.belongsTo(db.appointments, { foreignKey: "appointment_id", as: "pharmacyAppointments" });
db.machine_logs.belongsTo(db.users, { foreignKey: "createdBy", as: "usageLog" });
db.health_assessment_reports.belongsTo(db.users, { foreignKey: "user_id", as: "health_assessment_reports_user" });
db.medicines.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "medicineSpecialities" });
db.medicines.belongsTo(db.diseases, { foreignKey: "diseases_id", as: "medicineDiseases" });
db.enduser_referral_requests.belongsTo(db.users, { foreignKey: "receiver_id", as: "userSentReferralReq" });
db.enduser_referral_requests.belongsTo(db.user_reward_histories, { foreignKey: "sender_id", targetKey: "user_id", as: "userRewards" });
db.carts.belongsTo(db.ecom_products, { foreignKey: "product_id", as: "cartProducts" });
db.appointment_requests.belongsTo(db.lab_tests, { foreignKey: "lab_test_id", as: "appointmentReqLabTest" });



// ------- //
db.patients.hasOne(db.patient_insurances, { foreignKey: "patient_id", as: "patient_insurance" });
db.doctors.hasMany(db.doctor_timings, { foreignKey: "doctor_id", as: "doctor_timing" });
db.doctors.hasMany(db.doctor_achievements, { foreignKey: "doctor_id", as: "doctorAchievement" });
db.treatments.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "specialitydata" });
db.appointments.belongsTo(db.patients, { foreignKey: "patient_id", as: "patientdata" });
db.appointments.belongsTo(db.treatments, { foreignKey: "treatment_id", as: "treatmentdata" });
db.appointments.belongsTo(db.specialities, { foreignKey: "speciality_id", as: "specialitydata" });
db.appointments.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "doctors" });
db.appointments.belongsTo(db.clinics, { foreignKey: "clinic_id", as: "clinicdata" });
db.appointment_requests.belongsTo(db.doctors, { foreignKey: "doctor_id", as: "doctordata" });
db.appointment_requests.belongsTo(db.clinics, { foreignKey: "clinic_id", as: "clinicData" });
db.appointments.hasMany(db.appointment_requests, { foreignKey: "appointment_id", as: "appointmentRequest" });
db.appointments.hasMany(db.appointment_documents, { foreignKey: "appointment_id", as: "appointmentDoc" });
db.appointments.hasMany(db.patient_medicines, { foreignKey: "appointment_id", as: "patientMedicine" });
db.patient_medicines.belongsTo(db.medicines, { foreignKey: "medicine_id", as: "pharmacy" });
db.patient_medicines.hasOne(db.pharmacy_order_details, { foreignKey: "pharmacy_order_id", sourceKey: "pharmacy_order_id", as: "pharmacyOrderDetail" });
db.appointments.hasMany(db.patient_treatments, { foreignKey: "appointment_id", as: "patientTreatment" });
db.patient_treatments.belongsTo(db.treatments, { foreignKey: "treatment_id", as: "treatmentData" });
db.appointments.belongsTo(db.doctors, { foreignKey: "addon_doctor_id", as: "addonDoctor" });
db.appointments.hasMany(db.prescription_documents, { foreignKey: "patient_id", sourceKey: "patient_id", as: "patientPrescription" });
db.prescription_documents.belongsTo(db.users, { foreignKey: "createdBy", as: "userPreacription" });
db.prescription_documents.belongsTo(db.appointments, { foreignKey: "appointment_id", as: "appointmentInfo" });
db.prescription_documents.belongsTo(db.doctors, { foreignKey: "referral_doctor_id", as: "referralDoctor" });
db.appointments.hasMany(db.patient_billings, { foreignKey: "appointment_id", as: "hrBilling" });
db.appointments.hasMany(db.patient_symptoms, { foreignKey: "appointment_id", as: "patientSymptom" });
db.appointments.hasMany(db.patient_diseases, { foreignKey: "appointment_id", as: "patientDiseases" });
db.patient_symptoms.belongsTo(db.symptoms, { foreignKey: "symptoms_id", as: "symptoms" });
db.patient_diseases.belongsTo(db.diseases, { foreignKey: "disease_id", as: "diseases" });
db.ecom_products.hasMany(db.medias, { foreignKey: "ecom_product_id", as: "media" })
db.orders.hasMany(db.order_details, { foreignKey: 'order_id', as: "orderDetails" });
db.order_details.belongsTo(db.orders, { foreignKey: 'order_id', as: "orders" });
db.blogs.belongsTo(db.users, { foreignKey: "createdBy", as: "blogUser" });
db.challenges.hasMany(db.challenge_quizzes, { foreignKey: "challenge_id", as: "challengeQA" });
db.user_challenges.belongsTo(db.challenges, { foreignKey: "challenge_id", as: "challenge" });
db.challenge_answers.belongsTo(db.challenge_quizzes, { foreignKey: "challenge_quiz_id", as: "challengeQuiz" });
db.oral_screening_reports.belongsTo(db.patients, { foreignKey: "patient_id", as: "patientScreening" });
db.patients.hasOne(db.areas, { foreignKey: "pincode", sourceKey: "pincode", as: "pincodeData" });
db.doctors.hasMany(db.user_reviews, { foreignKey: "doctor_id", as: "doctorReview" });
db.clinics.hasMany(db.user_reviews, { foreignKey: "clinic_id", as: "clinicReview" });
db.clinics.hasMany(db.beds, { foreignKey: "clinic_id", as: "clinicBed" });
db.tickets.hasMany(db.ticket_histories, { foreignKey: "ticket_id", as: "ticketHistory" });
db.health_assessment_answers.belongsTo(db.health_assessment_quizzes, { foreignKey: "question_id", as: "healthAssessment" });
db.appointments.hasMany(db.patient_transactions, { foreignKey: "appointment_id", as: "patientTransaction" });
db.patient_transactions.belongsTo(db.appointment_orders, { foreignKey: "order_number", targetKey: "order_number", as: "appointmentOrder" });
db.order_details.hasMany(db.order_logs, { foreignKey: "order_detail_id", as: "orderLog" })
db.tickets.belongsTo(db.users, { foreignKey: "sender_id", as: "senderUser" });
db.tickets.belongsTo(db.users, { foreignKey: "receiver_id", as: "receiverUser" });
db.ticket_histories.belongsTo(db.users, { foreignKey: "user_id", as: "messageUser" });
db.tickets.belongsTo(db.users, { foreignKey: "createdBy", as: "createdUser" });
db.orders.belongsTo(db.transactions, { foreignKey: "order_number", targetKey: "order_id", as: "ecomTransaction" });
db.clinics.hasMany(db.lab_test_clinics, { foreignKey: "clinic_id", as: "clinicLabTest" });
db.clinics.belongsTo(db.hospital_admins, { foreignKey: "user_id", targetKey: "user_id", as: "clinicAdmin" });



db.Sequelize = Sequelize;
db.sequelize = sequelize;


module.exports = db;